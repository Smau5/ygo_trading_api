var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.069,1,1.6]],["body/controllers/AppController.html",[0,1.42,1,2.124,2,1.034,3,0.444,4,0.372,5,0.372,6,2.137,7,0.521,8,1.247,9,3.639,10,1.622,11,2.935,12,2.65,13,2.124,14,0.05,15,2.65,16,1.094,17,2.65,18,1.42,19,1.42,20,1.42,21,4.474,22,1.247,23,2.65,24,2.65,25,2.65,26,0.696,27,2.65,28,1.8,29,2.65,30,0.444,31,2.65,32,1.346,33,1.425,34,2.65,35,0.444,36,0.242,37,1.547,38,1.178,39,2.65,40,2.65,41,2.65,42,1.247,43,2.65,44,2.65,45,2.65,46,2.65,47,2.65,48,0.024,49,0.033,50,0.024]],["title/modules/AppModule.html",[51,0.824,52,1.6]],["body/modules/AppModule.html",[1,2.316,2,1.337,3,0.407,4,0.341,5,0.341,14,0.05,26,0.811,30,0.407,35,0.407,36,0.222,48,0.022,49,0.031,50,0.022,51,1.193,52,3.037,53,0.948,54,1.08,55,1.418,56,1.418,57,1.08,58,2.014,59,1.234,60,1.959,61,1.959,62,1.959,63,2.393,64,2.095,65,2.095,66,2.393,67,2,68,1.418,69,1.418,70,2.43,71,2.326,72,2.43,73,2.43,74,2.43,75,1.959,76,2.43,77,2.43,78,1.959,79,2.43,80,2.43,81,1.418]],["title/injectables/AppService.html",[66,1.392,82,0.625]],["body/injectables/AppService.html",[3,0.576,4,0.483,5,0.483,7,0.676,8,1.48,14,0.049,16,1.034,22,1.178,26,0.576,30,0.576,35,0.576,36,0.314,42,1.178,48,0.031,49,0.039,50,0.031,66,2.193,82,0.986,83,1.528,84,2.773,85,4.953,86,3.439,87,1.685,88,3.439,89,3.439]],["title/controllers/AuthController.html",[0,1.069,90,1.6]],["body/controllers/AuthController.html",[0,0.983,2,0.983,3,0.422,4,0.354,5,0.354,7,0.495,8,1.204,10,1.579,13,1.471,14,0.05,16,0.757,18,0.983,19,0.983,20,0.983,22,0.864,26,0.588,28,1.711,30,0.422,33,1.387,35,0.422,36,0.23,37,1.471,38,1.12,42,1.204,48,0.037,49,0.032,50,0.023,81,1.471,87,1.861,90,2.051,91,2.032,92,2.032,93,2.52,94,2.747,95,1.711,96,1.946,97,3.514,98,2.52,99,0.757,100,1.371,101,1.711,102,2.032,103,1.471,104,2.52,105,2.032,106,2.032,107,1.471,108,1.279,109,2.52,110,3.514,111,3.514,112,2.52,113,1.471,114,2.52,115,2.52,116,2.52,117,2.52]],["title/modules/AuthModule.html",[51,0.824,63,1.392]],["body/modules/AuthModule.html",[2,1.243,3,0.367,4,0.308,5,0.308,14,0.05,26,0.822,30,0.367,32,1.114,33,1.75,35,0.367,36,0.201,48,0.02,49,0.029,50,0.02,51,1.127,53,0.856,54,0.975,55,1.281,56,1.281,57,0.975,58,1.904,59,1.904,63,2.616,65,2.025,67,1.859,68,1.281,69,1.281,71,2.163,75,1.77,90,2.189,101,1.49,118,1.77,119,2.195,120,1.77,121,1.77,122,2.313,123,2.313,124,2.195,125,2.195,126,2.195,127,3.185,128,2.195,129,1.49,130,1.281,131,1.77,132,2.195,133,2.195,134,1.77,135,1.77,136,2.195,137,2.195,138,2.195]],["title/injectables/AuthService.html",[33,0.939,82,0.625]],["body/injectables/AuthService.html",[3,0.289,4,0.242,5,0.242,7,0.339,8,0.912,10,1.794,11,2.145,14,0.051,16,1.097,18,1.423,19,1.423,20,1.423,22,1.113,26,0.544,30,0.289,33,0.912,35,0.289,36,0.158,38,1.182,42,1.536,48,0.03,49,0.024,50,0.016,81,1.007,82,0.607,83,0.767,87,1.892,96,1.621,99,1.097,100,1.267,103,1.007,107,2.301,108,0.876,113,1.007,129,1.171,139,1.171,140,2.66,141,2.66,142,1.553,143,1.725,144,1.423,145,4.34,146,1.725,147,2.66,148,2.66,149,1.725,150,1.267,151,2.66,152,1.725,153,2.66,154,3.246,155,1.725,156,1.806,157,1.725,158,1.007,159,1.391,160,1.171,161,1.391,162,2.145,163,1.725,164,1.725,165,1.725,166,1.725,167,1.725,168,1.391,169,1.391,170,1.725,171,1.725,172,1.725,173,1.725,174,1.725,175,1.725,176,1.725,177,1.391,178,2.66,179,1.725,180,1.725,181,1.725]],["title/modules/DatabaseModule.html",[51,0.824,64,1.218]],["body/modules/DatabaseModule.html",[3,0.606,4,0.508,5,0.508,14,0.049,26,0.747,30,0.606,35,0.606,36,0.331,48,0.033,49,0.041,50,0.033,51,1.341,53,1.413,58,1.839,59,1.839,64,1.982,182,3.622,183,3.282,184,3.622]],["title/injectables/JwtStrategy.html",[82,0.625,122,1.392]],["body/injectables/JwtStrategy.html",[3,0.448,4,0.375,5,0.375,7,0.526,8,1.255,10,1.629,14,0.051,16,1.1,18,1.043,19,1.043,20,1.043,22,0.916,26,0.788,30,0.613,32,1.357,35,0.448,36,0.244,42,0.916,48,0.024,49,0.033,50,0.024,82,0.835,83,1.188,99,0.804,100,1.043,103,1.561,113,1.561,122,1.859,130,1.561,131,2.156,135,2.156,142,2.437,168,2.156,185,2.156,186,2.953,187,2.674,188,3.661,189,2.674,190,2.674,191,2.156,192,1.815,193,2.156,194,2.156,195,2.156,196,2.156,197,2.156,198,2.674,199,2.674,200,2.674,201,2.674,202,2.674,203,2.674,204,2.674]],["title/injectables/LocalStrategy.html",[82,0.625,123,1.392]],["body/injectables/LocalStrategy.html",[3,0.418,4,0.351,5,0.351,7,0.491,8,1.198,10,1.572,14,0.05,16,1.05,18,1.363,19,1.363,20,1.363,22,0.857,26,0.73,30,0.418,32,1.269,33,1.63,35,0.418,36,0.228,37,1.459,38,1.111,42,0.857,48,0.023,49,0.032,50,0.023,82,0.797,83,1.111,87,1.856,96,1.939,99,1.05,100,0.975,101,1.697,107,1.459,108,1.269,123,1.774,142,1.459,150,1.572,156,2.372,186,2.818,191,2.015,192,1.697,194,2.015,195,2.015,196,2.015,197,2.015,205,2.015,206,2.499,207,2.499,208,3.494,209,2.499,210,2.015,211,3.494,212,2.499,213,2.499,214,1.697]],["title/classes/User.html",[36,0.25,150,1.069]],["body/classes/User.html",[3,0.502,4,0.421,5,0.421,7,0.59,13,2.584,14,0.049,16,1.331,26,0.502,35,0.502,36,0.274,48,0.027,49,0.036,50,0.027,87,1.836,96,1.967,99,1.331,100,1.727,150,1.544,215,3.001,216,2.42,217,3.957,218,4.427,219,3.191,220,4.427,221,3.001,222,4.706,223,3.001,224,3.001,225,3.957,226,3.001,227,2.037]],["title/controllers/UserController.html",[0,1.069,228,1.6]],["body/controllers/UserController.html",[0,1.052,2,1.052,3,0.452,4,0.379,5,0.379,7,0.53,8,1.262,13,2.15,14,0.05,16,1.107,18,1.052,19,1.052,20,1.052,22,1.262,26,0.617,28,2.848,30,0.452,35,0.452,36,0.246,37,1.574,38,1.199,42,1.262,48,0.025,49,0.034,50,0.025,87,1.9,92,2.175,94,2.848,95,1.831,96,2.003,99,0.811,100,1.437,102,2.175,105,2.175,106,2.175,144,1.636,150,1.052,228,2.15,229,2.175,230,3.635,231,2.697,232,2.697,233,2.175,234,2.697,235,2.697,236,2.697]],["title/modules/UserModule.html",[51,0.824,65,1.218]],["body/modules/UserModule.html",[2,1.416,3,0.442,4,0.37,5,0.37,14,0.05,26,0.784,30,0.442,35,0.442,36,0.241,48,0.024,49,0.033,50,0.024,51,1.247,53,1.03,54,1.173,55,1.54,56,1.54,57,1.173,58,2.105,59,2.105,64,2.15,65,2.276,67,2.118,68,1.54,69,1.54,71,2.464,144,2.059,228,2.421,233,2.128,237,2.128,238,2.639,239,2.128,240,2.128,241,2.639,242,2.464,243,2.639,244,2.639,245,2.639]],["title/injectables/UserService.html",[82,0.625,144,1.069]],["body/injectables/UserService.html",[3,0.299,4,0.251,5,0.251,7,0.351,8,0.936,10,1.907,14,0.051,16,1.203,18,1.449,19,1.449,20,1.449,22,1.273,26,0.555,30,0.299,35,0.299,36,0.163,38,0.793,42,1.506,48,0.016,49,0.025,50,0.016,81,1.594,82,0.623,83,0.793,87,1.97,94,1.854,95,1.854,96,1.952,99,1.117,100,1.768,103,1.042,107,1.594,108,0.906,113,1.594,142,1.594,144,1.066,150,1.294,156,2.522,162,1.44,169,1.44,177,2.203,214,1.212,227,1.212,230,2.996,246,1.44,247,2.731,248,2.731,249,1.786,250,2.996,251,1.786,252,2.731,253,1.786,254,1.786,255,2.731,256,1.786,257,1.786,258,1.44,259,1.786,260,1.786,261,2.731,262,1.786,263,1.786,264,1.44,265,1.786,266,1.786,267,1.786,268,1.786,269,1.786]],["title/coverage.html",[270,2.528]],["body/coverage.html",[0,1.582,1,1.477,5,0.355,6,2.04,14,0.049,33,0.867,36,0.231,48,0.023,49,0.032,50,0.023,57,1.124,66,1.284,82,1.052,84,2.04,90,1.477,91,2.04,99,0.76,122,1.284,123,1.284,130,1.477,139,2.754,144,0.987,150,0.987,158,1.477,160,1.718,183,1.718,185,2.04,205,2.04,214,1.718,216,2.04,228,1.477,229,2.04,242,1.718,246,2.04,264,4.31,270,1.718,271,2.53,272,2.53,273,2.53,274,4.386,275,3.524,276,2.53,277,4.612,278,4.775,279,2.04,280,2.04,281,2.04,282,2.53,283,2.53,284,2.04,285,2.53,286,2.53,287,2.53]],["title/dependencies.html",[54,1.463,288,2.297]],["body/dependencies.html",[14,0.051,30,0.531,32,1.61,48,0.029,49,0.037,50,0.029,54,1.409,78,2.558,129,2.153,158,1.851,192,3.087,193,2.558,210,2.558,227,2.153,289,4.547,290,3.172,291,3.172,292,4.102,293,3.172,294,3.172,295,3.172,296,3.172,297,3.172,298,3.172,299,3.172,300,3.172,301,3.172,302,3.172,303,3.172,304,3.172,305,3.172,306,3.172,307,3.172,308,3.172]],["title/miscellaneous/functions.html",[309,1.341,310,2.655]],["body/miscellaneous/functions.html",[7,0.797,14,0.044,48,0.037,49,0.044,50,0.037,57,2.255,281,3.268,309,2.366,310,3.268,311,4.053]],["title/index.html",[7,0.452,312,2.297,313,2.297]],["body/index.html",[4,0.361,14,0.049,48,0.023,49,0.033,50,0.023,250,2.075,270,1.747,314,2.573,315,2.573,316,3.565,317,2.573,318,2.573,319,2.573,320,2.573,321,2.573,322,2.573,323,2.573,324,2.573,325,2.573,326,2.573,327,4.092,328,2.573,329,2.573,330,2.573,331,4.922,332,2.573,333,2.573,334,2.573,335,4.8,336,2.573,337,2.573,338,3.565,339,2.573,340,2.573,341,2.573,342,2.573,343,3.565,344,3.565,345,2.573,346,2.573,347,2.573,348,3.565,349,3.565,350,2.573,351,2.573,352,2.573,353,2.573,354,2.573,355,2.075,356,2.573,357,2.573,358,2.573,359,2.573,360,2.573,361,2.573,362,2.573,363,2.573,364,2.573,365,2.573,366,2.573,367,2.573,368,2.573,369,2.573,370,2.573,371,2.573,372,2.573,373,2.573]],["title/modules.html",[53,1.453]],["body/modules.html",[14,0.042,48,0.034,49,0.042,50,0.034,52,2.192,53,1.465,63,1.906,64,1.668,65,1.668,355,3.961,374,4.912,375,4.912,376,5.108,377,3.755,378,3.755]],["title/overview.html",[379,3.003]],["body/overview.html",[2,0.987,14,0.049,33,1.679,36,0.231,48,0.023,49,0.032,50,0.023,51,0.76,52,3,53,0.987,54,1.124,55,1.477,56,1.477,57,1.124,58,1.284,59,1.284,60,2.04,61,2.04,62,2.04,63,2.66,64,1.949,65,2.256,66,2.059,67,2.057,68,1.477,69,1.477,83,1.124,118,2.04,120,2.04,121,2.04,122,2.059,123,2.059,144,1.912,237,2.04,239,2.04,240,2.04,379,2.04,380,2.53,381,2.53,382,2.53,383,2.53]],["title/miscellaneous/variables.html",[309,1.341,384,2.655]],["body/miscellaneous/variables.html",[7,0.537,10,1.066,14,0.051,48,0.025,49,0.034,50,0.025,99,1.362,108,1.388,130,2.169,134,2.997,139,1.856,158,2.169,159,2.204,160,2.523,161,2.204,183,2.523,219,2.204,242,2.523,258,2.204,279,2.204,280,2.204,284,2.204,309,1.595,384,2.204,385,3.717,386,2.733,387,2.733,388,2.733,389,4.74,390,4.74,391,3.717,392,3.717,393,3.717,394,2.733,395,2.733,396,2.733,397,2.733,398,3.717,399,2.733]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":264,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["0.2.22",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":383,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["2.18.1",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":381,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["3.0.8",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":380,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":382,"title":{},"body":{"overview.html":{}}}],["6.1.1",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["6.10.14",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["access_token",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":356,"title":{},"body":{"index.html":{}}}],["angular",{"_index":325,"title":{},"body":{"index.html":{}}}],["app",{"_index":333,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":322,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":52,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":66,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":90,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["authmodule",{"_index":63,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":366,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":33,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":378,"title":{},"body":{"modules.html":{}}}],["await",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":357,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(pass",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["body('password",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["body('username",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":376,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":374,"title":{},"body":{"modules.html":{}}}],["building",{"_index":317,"title":{},"body":{"index.html":{}}}],["catch",{"_index":268,"title":{},"body":{"injectables/UserService.html":{}}}],["checkduplicateusername",{"_index":247,"title":{},"body":{"injectables/UserService.html":{}}}],["checkduplicateusername(username",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["class",{"_index":36,"title":{"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":215,"title":{},"body":{"classes/User.html":{}}}],["cluster_appmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":237,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":239,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":238,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":240,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":226,"title":{},"body":{"classes/User.html":{}}}],["column('varchar",{"_index":222,"title":{},"body":{"classes/User.html":{}}}],["configmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.getrepository(user",{"_index":399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["constants",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":206,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{}}}],["constructor(userrepository",{"_index":249,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(usersservice",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('user",{"_index":234,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":270,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createconnection",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database.providers",{"_index":184,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["database_connection",{"_index":392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":64,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":183,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":326,"title":{},"body":{"index.html":{}}}],["development",{"_index":334,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["duplicateusername",{"_index":262,"title":{},"body":{"injectables/UserService.html":{}}}],["duplicateusername.length",{"_index":263,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":345,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":318,"title":{},"body":{"index.html":{}}}],["el",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["entity",{"_index":225,"title":{},"body":{"classes/User.html":{}}}],["existe",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":195,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":190,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":199,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":230,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":248,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(username",{"_index":255,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":316,"title":{},"body":{"index.html":{}}}],["function",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":310,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('profile",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["getprofile",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":312,"title":{"index.html":{}},"body":{}}],["graph",{"_index":377,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":352,"title":{},"body":{"index.html":{}}}],["hash",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["heavily",{"_index":323,"title":{},"body":{"index.html":{}}}],["hello",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":363,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":370,"title":{},"body":{"index.html":{}}}],["id",{"_index":218,"title":{},"body":{"classes/User.html":{}}}],["identifier",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":200,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":258,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["inject('user_repository",{"_index":260,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":82,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["insert",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["insert(username",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["inspired",{"_index":324,"title":{},"body":{"index.html":{}}}],["installation",{"_index":330,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":332,"title":{},"body":{"index.html":{}}}],["isduplicate",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["isglobal",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":359,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":193,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconstants",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":198,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":122,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":367,"title":{},"body":{"index.html":{}}}],["key",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":373,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":349,"title":{},"body":{"index.html":{}}}],["local",{"_index":210,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["localstrategy",{"_index":123,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["login",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["metadata",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":309,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":348,"title":{},"body":{"index.html":{}}}],["mode",{"_index":338,"title":{},"body":{"index.html":{}}}],["module",{"_index":51,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":53,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":362,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":368,"title":{},"body":{"index.html":{}}}],["name",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":327,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":372,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":214,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["node.js",{"_index":315,"title":{},"body":{"index.html":{}}}],["npm",{"_index":331,"title":{},"body":{"index.html":{}}}],["null",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":219,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["open",{"_index":350,"title":{},"body":{"index.html":{}}}],["optional",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":379,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":288,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["pass",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":192,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":194,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":196,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["payload",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":203,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":204,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":360,"title":{},"body":{"index.html":{}}}],["post",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post('auth/login",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["post('register",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":220,"title":{},"body":{"classes/User.html":{}}}],["private",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":340,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":314,"title":{},"body":{"index.html":{}}}],["project",{"_index":351,"title":{},"body":{"index.html":{}}}],["promise",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":217,"title":{},"body":{"classes/User.html":{}}}],["provide",{"_index":391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["read",{"_index":361,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(username",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["repository",{"_index":250,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["require('bcrypt",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":335,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["saltrounds",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["saltrounds).then(hash",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["save(user",{"_index":267,"title":{},"body":{"injectables/UserService.html":{}}}],["scalable",{"_index":319,"title":{},"body":{"index.html":{}}}],["secret",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":201,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":320,"title":{},"body":{"index.html":{}}}],["side",{"_index":321,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":354,"title":{},"body":{"index.html":{}}}],["src/.../auth.service.ts",{"_index":385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":311,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.providers.ts",{"_index":388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:17",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:8",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts:13",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:33",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":185,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":189,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":187,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":205,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:11",{"_index":209,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:6",{"_index":207,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/database/database.module",{"_index":244,"title":{},"body":{"modules/UserModule.html":{}}}],["src/database/database.module.ts",{"_index":182,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.providers.ts",{"_index":280,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":281,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/user.controller.ts",{"_index":229,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:12",{"_index":232,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:7",{"_index":231,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.entity.ts",{"_index":216,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:12",{"_index":223,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:6",{"_index":221,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:9",{"_index":224,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.module.ts",{"_index":241,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.providers.ts",{"_index":284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts",{"_index":246,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:12",{"_index":254,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:16",{"_index":253,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":257,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:41",{"_index":256,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":251,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":336,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":339,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":341,"title":{},"body":{"index.html":{}}}],["started",{"_index":313,"title":{"index.html":{}},"body":{}}],["starter",{"_index":329,"title":{},"body":{"index.html":{}}}],["statements",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":364,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":191,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sub",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":197,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":355,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":375,"title":{},"body":{"modules.html":{}}}],["table",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":344,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":347,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":346,"title":{},"body":{"index.html":{}}}],["tests",{"_index":343,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":353,"title":{},"body":{"index.html":{}}}],["then(isduplicate",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.login(req.user",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.register(username",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":212,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.jwtservice.sign(payload",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository",{"_index":266,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":261,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":269,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findall",{"_index":235,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.insert(username",{"_index":236,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(username",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.insert(username",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":213,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["touch",{"_index":365,"title":{},"body":{"index.html":{}}}],["true",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["twitter",{"_index":371,"title":{},"body":{"index.html":{}}}],["type",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":227,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typescript",{"_index":328,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":211,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unit",{"_index":342,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard('jwt",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard('local",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(undefined)@get('profile",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(undefined)@post('auth/login",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":150,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":245,"title":{},"body":{"modules/UserModule.html":{}}}],["user.entity",{"_index":259,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":265,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password).then(valid",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.providers",{"_index":243,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":233,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.username",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user/user.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_repository",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":228,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":202,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["usermodule",{"_index":65,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userproviders",{"_index":242,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":252,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":144,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["usuario",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["valid",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":186,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":188,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":208,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":384,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":337,"title":{},"body":{"index.html":{}}}],["website",{"_index":369,"title":{},"body":{"index.html":{}}}],["world",{"_index":89,"title":{},"body":{"injectables/AppService.html":{}}}],["ya",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["you'd",{"_index":358,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Request, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { AuthService } from './auth/auth.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly authService: AuthService) {}\n\n  @UseGuards(AuthGuard('local'))\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(AuthGuard('jwt'))\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { UserModule } from './user/user.module';\nimport { DatabaseModule } from './database/database.module';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    AuthModule,\n    UserModule,\n    DatabaseModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                insert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insert(username: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { AuthService } from './auth.service';\nimport { Controller, Get, Post, Body, Logger } from '@nestjs/common';\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('register')\n  async insert(\n    @Body('username') username: string,\n    @Body('password') password: string,\n  ) {\n    const result = await this.authService.register(username, password);\n    if (result) {\n      return { registered: true, message: 'Ok' };\n    } else {\n      return { registered: false, message: 'El usuario ya existe' };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UserModule } from '../user/user.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { JwtService } from '@nestjs/jwt';\nconst bcrypt = require('bcrypt');\nconst saltRounds = 10;\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UserService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findOne(username);\n\n    return bcrypt.compare(pass, user.password).then(valid => {\n      if (valid === true) {\n        const { password, ...result } = user;\n        return result;\n      } else {\n        return null;\n      }\n    });\n  }\n\n  async login(user: any) {\n    const payload = { username: user.username, sub: user.id };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  async register(username: string, password: string) {\n    return bcrypt.hash(password, saltRounds).then(hash => {\n      return this.usersService\n        .checkDuplicateUsername(username, hash)\n        .then(isDuplicate => {\n          if (!isDuplicate) {\n            return this.usersService.insert(username, hash);\n          } else {\n            return false;\n          }\n        });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\nimport { Logger } from '@nestjs/common';\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('varchar')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('varchar')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('varchar')\n  username: string;\n\n  @Column('varchar')\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                insert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(username: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { UserService } from './user.service';\nimport { Controller, Get, Post, Body } from '@nestjs/common';\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n  @Get()\n  findAll(): any {\n    return this.userService.findAll();\n  }\n\n  @Post()\n  insert(\n    @Body('username') username: string,\n    @Body('password') password: string,\n  ): any {\n    return this.userService.insert(username, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { userProviders } from './user.providers';\nimport { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { DatabaseModule } from 'src/database/database.module';\nimport { UserController } from './user.controller';\n@Module({\n  imports: [DatabaseModule],\n  providers: [UserService, ...userProviders],\n  exports: [UserService],\n  controllers: [UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkDuplicateUsername\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                insert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkDuplicateUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDuplicateUsername(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insert(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Logger } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from './user.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject('USER_REPOSITORY')\n    private readonly userRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return this.userRepository.find();\n  }\n\n  async checkDuplicateUsername(username: string, password: string) {\n    const duplicateUsername = await this.userRepository.find({\n      username: username,\n    });\n    if (duplicateUsername.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  async insert(username: string, password: string) {\n    const user = new User();\n    user.username = username;\n    user.password = password;\n    return this.userRepository\n      .save(user)\n      .then(() => {\n        return true;\n      })\n      .catch(() => {\n        return false;\n      });\n  }\n\n  async findOne(username: string): Promise {\n    return this.userRepository.findOne({ username: username });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            variable\n            saltRounds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.providers.ts\n            \n            variable\n            userProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.10.14\n        \n            @nestjs/config : ^0.2.2\n        \n            @nestjs/core : ^6.10.14\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : ^6.10.14\n        \n            bcrypt : ^3.0.8\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.4\n        \n            typeorm : ^0.2.22\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (src/.../auth.service.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            saltRounds   (src/.../auth.service.ts)\n                        \n                        \n                            userProviders   (src/.../user.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bcrypt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('bcrypt')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saltRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n\n\n            \n        \n\n    src/database/database.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'DATABASE_CONNECTION',\n    useFactory: async () => await createConnection(),\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: 'secret key',\n}\n                        \n                    \n\n\n            \n        \n\n    src/user/user.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'USER_REPOSITORY',\n    useFactory: (connection: Connection) => connection.getRepository(User),\n    inject: ['DATABASE_CONNECTION'],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
